#!/bin/bash

# The various escape codes that we can use to color our prompt.
COLOR_NONE='\[\e[0m\]'
BG_BLUE='\[\e[48;5;025m\]'
BG_ORANGE='\[\e[48;5;130m\]'
FG_GREEN='\[\033[0;32m\]'
FG_LIGHT_BLUE='\[\e[38;5;081m\]'
FG_RED='\[\033[0;31m\]'
FG_WHITE='\[\e[38;5;231m\]'
FG_YELLOW='\[\033[1;33m\]'

# Determine the branch/state information for this git repository.
_set_git_branch() {
  # Capture the output of the "git status" command.
  git_status="$(git status 2> /dev/null)"

  # Set color based on clean/staged/dirty.
  if [[ ${git_status} =~ "Changes not staged for commit" ]]; then
    state="$FG_RED"
  elif [[ ${git_status} =~ "Changes to be committed" ]] || [[ ${git_status} =~ "Untracked files" ]]; then
    state="$FG_YELLOW"
  else
    state="$FG_GREEN"
  fi

  # Set arrow icon based on status against remote.
  remote_pattern="# Your branch is (ahead|behind)+ "
  if [[ ${git_status} =~ ${remote_pattern} ]]; then
    if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
      remote="↑"
    else
      remote="↓"
    fi
  else
    remote=""
  fi
  diverge_pattern="# Your branch and (.*) have diverged"
  if [[ ${git_status} =~ ${diverge_pattern} ]]; then
    remote="↕"
  fi

  # Get the name of the branch.
  branch="$(git rev-parse --abbrev-ref HEAD 2>/dev/null)"

  # Set the final branch string.
  printf "%s(%s%s)%s" "$state" "$branch" "$remote" "$COLOR_NONE"
}

# Determine active Python virtualenv details.
_set_virtualenv() {
  if [ -n "$VIRTUAL_ENV" ]; then
    venv=$(basename "$VIRTUAL_ENV")
    printf "%s[%s]%s" "$FG_LIGHT_BLUE" "$venv" "$COLOR_NONE"
  fi
}

_set_k8s() {
  # if KUBECONFIG is unset, set it to default ~/.kube/config
  [ -z "$KUBECONFIG" ] && local KUBECONFIG=~/.kube/config
  # only configure if KUBECONFIG exists
  if [ -f $KUBECONFIG ]; then
    context=$(grep current-context $KUBECONFIG | awk '{print $2}')
    namespace=$(kubectl config view -o jsonpath="{.contexts[?(@.name == '$context')].context.namespace}")
    printf "%s%s %s:%s %s" "$FG_WHITE" "$BG_BLUE" "$context" "$namespace" "$COLOR_NONE"
  fi
}

_set_aws() {
  [ -n "$AWS_PROFILE" ] && printf "%s%s %s %s" "$FG_WHITE" "$BG_ORANGE" "$AWS_PROFILE" "$COLOR_NONE"
}

# gather all blocks with background colors
_set_color_blocks() {
  out=''
  aws=$(_set_aws) && [ -n "$aws" ] && out="${out}${aws}"
  k8s=$(_set_k8s) && [ -n "$k8s" ] && out="${out}${k8s}"
  printf "%s" "$out"
}

# Set the full bash prompt.
_set_bash_prompt() {
  PS1=''

  # add a space after blocks
  blocks=$(_set_color_blocks) && [ -n "$blocks" ] && PS1="$blocks "

  # add a space after python venv
  py=$(_set_virtualenv) && [ -n "$py" ] && PS1="${PS1}${py} "

  # add a space after git details
  if which git &>/dev/null && git rev-parse --git-dir &>/dev/null; then
    git=$(_set_git_branch)
    PS1="${PS1}${git} "
  fi

  PS1="${PS1}${LIGHT_GRAY}\\w${COLOR_NONE} \$ "
}

# Tell bash to execute this function just before displaying its prompt.
PROMPT_COMMAND=_set_bash_prompt
